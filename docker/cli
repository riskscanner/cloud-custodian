FROM registry.cn-qingdao.aliyuncs.com/x-lab/fabric8-java-alpine-openjdk8-jre:py37 as build-env

USER root

# replace apk source
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories

# pre-requisite distro deps, and build env setup
RUN apk add --update \
 curl \
 && apk add gcc g++ make git libffi-dev openssl-dev libxml2-dev libxslt-dev musl-dev cargo libtool --no-cache \
 && python3 -m venv /usr/local \
 && curl -sSL https://nginx-qa.fit2cloud.com/tools/get-poetry.py | python3

WORKDIR /src

# Add core & aws packages
ADD pyproject.toml poetry.lock README.md /src/
ADD c7n /src/c7n/
RUN . /usr/local/bin/activate && $HOME/.poetry/bin/poetry install --no-dev
RUN . /usr/local/bin/activate && pip install -q wheel
RUN . /usr/local/bin/activate && pip install -q aws-xray-sdk psutil jsonpatch

# Add provider packages
ADD tools/c7n_gcp /src/tools/c7n_gcp
RUN rm -R tools/c7n_gcp/tests
ADD tools/c7n_azure /src/tools/c7n_azure
RUN rm -R tools/c7n_azure/tests_azure
#ADD tools/c7n_kube /src/tools/c7n_kube
#RUN rm -R tools/c7n_kube/tests
ADD tools/c7n_aliyun /src/tools/c7n_aliyun
RUN rm -R tools/c7n_aliyun/test
ADD tools/c7n_huawei /src/tools/c7n_huawei
RUN rm -R tools/c7n_huawei/test
ADD tools/c7n_tencent /src/tools/c7n_tencent
RUN rm -R tools/c7n_tencent/test
ADD tools/c7n_openstack /src/tools/c7n_openstack
RUN rm -R tools/c7n_openstack/test
ADD tools/c7n_vsphere /src/tools/c7n_vsphere
RUN rm -R tools/c7n_vsphere/test

# Install requested providers
ARG providers="azure gcp aliyun huawei tencent openstack vsphere"
RUN . /usr/local/bin/activate && \
    pip install --upgrade git+https://github.com/vmware/vsphere-automation-sdk-python.git
RUN . /usr/local/bin/activate && \
    for pkg in $providers; do cd tools/c7n_$pkg && \
    $HOME/.poetry/bin/poetry lock && \
    $HOME/.poetry/bin/poetry install && cd ../../; done

RUN mkdir /output

FROM registry.cn-qingdao.aliyuncs.com/x-lab/fabric8-java-alpine-openjdk8-jre:py37

COPY --from=build-env /src /src
COPY --from=build-env /usr/local /usr/local
COPY --from=build-env /output /output

RUN rm -Rf /var/cache/apk

USER root
WORKDIR /home/custodian
ENV LC_ALL="C.UTF-8" LANG="C.UTF-8"
VOLUME ["/home/custodian"]

